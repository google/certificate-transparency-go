// Copyright 2018 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package configpb;

import "github.com/google/trillian/crypto/keyspb/keyspb.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

// LogConfig describes the configuration options for a Log.
message LogConfig {
  // Human-readable name for the log; must be unique
  string name = 1;
  // Base URL for the log.
  string url = 2;
  // Log's public key. This is optional, but if omitted signatures from
  // the log will not be checked.
  keyspb.PublicKey public_key = 3;
  // Minimum interval between requests to the log, for rate limiting.
  google.protobuf.Duration min_req_interval = 4;
}

// GossipConfig describes the configuration of a gossiper.
message GossipConfig {
  // The source logs whose STHs will be logged.
  repeated LogConfig source_log = 1;
  // The destination logs to which the minimal-gossip certificates will
  // be submitted.  These destination logs need to be configured to accept
  // root_cert as an acceptable root.
  repeated LogConfig dest_log = 2;
  // The root certificate used for submissions, in PEM format; this should
  // include the public key corresponding to private_key below.
  string root_cert = 3;
  // The private key that will be used to sign synthetic leaf certificates
  // that chain to the root_cert.
  google.protobuf.Any private_key = 4;
  // Number of buffered STHs allowed.
  // TODO(drysdale): investigate sensible ranges for this.
  int32 buffer_size = 5;
}

// GoshawkConfig describes the configuration of a gossiper.
message GoshawkConfig {
  // The source logs whose STHs will be checked.
  repeated LogConfig source_log = 1;
  // The destination log which will be scanned for minimal-gossip certificates.
  LogConfig dest_log = 2;
  // Number of STHs pending verification that can be buffered up for each source log.
  int32 buffer_size = 5;
}
