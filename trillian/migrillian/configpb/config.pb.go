// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package configpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import keyspb "github.com/google/trillian/crypto/keyspb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MigrationConfig describes the configuration options for a single CT log
// migration instance.
type MigrationConfig struct {
	// The URI for the source CT log.
	SourceUri string `protobuf:"bytes,1,opt,name=source_uri,json=sourceUri,proto3" json:"source_uri,omitempty"`
	// The public key of the source log.
	PublicKey *keyspb.PublicKey `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Trillian backend URI specification.
	TrillianUri string `protobuf:"bytes,3,opt,name=trillian_uri,json=trillianUri,proto3" json:"trillian_uri,omitempty"`
	// The ID of a Trillian PREORDERED_LOG tree that stores the log data.
	LogId int64 `protobuf:"varint,4,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	// Max number of entries per get-entries request from this log.
	BatchSize            int32    `protobuf:"varint,5,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrationConfig) Reset()         { *m = MigrationConfig{} }
func (m *MigrationConfig) String() string { return proto.CompactTextString(m) }
func (*MigrationConfig) ProtoMessage()    {}
func (*MigrationConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_a48676a7a037262a, []int{0}
}
func (m *MigrationConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationConfig.Unmarshal(m, b)
}
func (m *MigrationConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationConfig.Marshal(b, m, deterministic)
}
func (dst *MigrationConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationConfig.Merge(dst, src)
}
func (m *MigrationConfig) XXX_Size() int {
	return xxx_messageInfo_MigrationConfig.Size(m)
}
func (m *MigrationConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationConfig proto.InternalMessageInfo

func (m *MigrationConfig) GetSourceUri() string {
	if m != nil {
		return m.SourceUri
	}
	return ""
}

func (m *MigrationConfig) GetPublicKey() *keyspb.PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *MigrationConfig) GetTrillianUri() string {
	if m != nil {
		return m.TrillianUri
	}
	return ""
}

func (m *MigrationConfig) GetLogId() int64 {
	if m != nil {
		return m.LogId
	}
	return 0
}

func (m *MigrationConfig) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func init() {
	proto.RegisterType((*MigrationConfig)(nil), "configpb.MigrationConfig")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_a48676a7a037262a) }

var fileDescriptor_config_a48676a7a037262a = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0xcf, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x06, 0x60, 0xe2, 0xda, 0xc5, 0xce, 0x2e, 0x88, 0x05, 0xa1, 0x08, 0x42, 0xf5, 0xd4, 0x53,
	0x2b, 0x8a, 0x4f, 0xe0, 0x49, 0x44, 0x90, 0x8a, 0xe7, 0xd0, 0x64, 0x63, 0x76, 0xd8, 0xd8, 0x09,
	0x69, 0x72, 0xc8, 0xbe, 0x9a, 0x2f, 0xb7, 0x6c, 0xda, 0x9e, 0x92, 0xf9, 0x07, 0x3e, 0xfe, 0x81,
	0xad, 0xa4, 0xe1, 0x17, 0x75, 0x63, 0x1d, 0x79, 0x2a, 0xae, 0xa6, 0xc9, 0x8a, 0xbb, 0x57, 0x8d,
	0x7e, 0x1f, 0x44, 0x23, 0xe9, 0xaf, 0xd5, 0x44, 0xda, 0xa8, 0xd6, 0x3b, 0x34, 0x06, 0xfb, 0xa1,
	0x95, 0x2e, 0x5a, 0x4f, 0xed, 0x41, 0xc5, 0xd1, 0x8a, 0xf9, 0x99, 0x80, 0xc7, 0x7f, 0x06, 0xd7,
	0x9f, 0xa8, 0x5d, 0xef, 0x91, 0x86, 0xb7, 0x84, 0x15, 0xf7, 0x00, 0x23, 0x05, 0x27, 0x15, 0x0f,
	0x0e, 0x4b, 0x56, 0xb1, 0x3a, 0xef, 0xf2, 0x29, 0xf9, 0x71, 0x58, 0x3c, 0x01, 0xd8, 0x20, 0x0c,
	0x4a, 0x7e, 0x50, 0xb1, 0xbc, 0xa8, 0x58, 0xbd, 0x79, 0xbe, 0x69, 0x66, 0xf5, 0x2b, 0x6d, 0x3e,
	0x54, 0xec, 0x72, 0xbb, 0x7c, 0x8b, 0x07, 0xd8, 0x2e, 0x5d, 0x12, 0xb9, 0x4a, 0xe4, 0x66, 0xc9,
	0xce, 0xe8, 0x2d, 0xac, 0x0d, 0x69, 0x8e, 0xbb, 0xf2, 0xb2, 0x62, 0xf5, 0xaa, 0xcb, 0x0c, 0xe9,
	0xf7, 0xdd, 0xb9, 0x8a, 0xe8, 0xbd, 0xdc, 0xf3, 0x11, 0x8f, 0xaa, 0xcc, 0x2a, 0x56, 0x67, 0x5d,
	0x9e, 0x92, 0x6f, 0x3c, 0x2a, 0xb1, 0x4e, 0x47, 0xbc, 0x9c, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfa,
	0xde, 0xd5, 0x33, 0x15, 0x01, 0x00, 0x00,
}
